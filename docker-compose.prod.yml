services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: employee_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d employee_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: ./backend/employee-management-system
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/employee_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password123
      - JWT_SECRET=mySecretKey123456789012345678901234567890123456789012345678901234567890EXTRA
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/auth/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  postgres_data: 